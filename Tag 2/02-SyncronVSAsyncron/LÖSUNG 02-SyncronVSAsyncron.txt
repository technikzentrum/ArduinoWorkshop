/* Beispiel aus der Bibiothek (angepasst duch Marco Gabrecht)
 *  Dies ist die Lösung von dem RAMP Beispiel.
 *  Bitte passe diese Beispiel so an, dass die LED innerhalb von einer Sekunde auf 100% geht und danach wieder auf 0
 *  UND Schreibe alle 1000ms den aktuellen Wert in die Console.
 *  UND Lese alle 50ms einen Analogen Pin ein (10 Bit) schreibe das Ergebnis in die Console
 *  Wichtig: Die LED muss weiterhin durchgänig faden.
 *  UND Wenn der button gedrückt wird soll in der Seriellenausgabe sofort an/aus stehen(Toggleswitch).
 *  
 *  Tipp: delay() sollte nicht verwendet werden.
 *  
 *  Links:
 *  https://www.arduino.cc/reference/en/libraries/ramp/
 *  https://github.com/siteswapjuggler/RAMP
 *  https://randomnerdtutorials.com/esp32-pwm-arduino-ide/
 *  https://www.arduino.cc/reference/de/language/functions/time/millis/
 *  https://www.arduino.cc/reference/de/language/functions/communication/serial/begin/
 *  https://www.arduino.cc/reference/de/language/structure/arithmetic-operators/modulo/
 *  https://www.arduino.cc/reference/de/language/structure/control-structure/else/
 *  https://randomnerdtutorials.com/esp32-adc-analog-read-arduino-ide/
 *  
 */
#include <Ramp.h>                             // include library
#define BUTTON_PIN 0

ramp myRamp;                               // new int ramp object
int analogPin = 34;
long lastRun = 0;
boolean toggleswitch = false;
boolean isPressedMarker = false;

void setup() {
  analogReadResolution(10);
  pinMode(LED_BUILTIN, OUTPUT);             // LED als ausgabe
  pinMode(BUTTON_PIN, INPUT);
  myRamp.go(0);                            // setze anfangswert auf 0
  myRamp.go(255, 1000, LINEAR, BACKANDFORTH);      // gehe in 1000ms auf 255 linear und das in einem forwärts und rückwärts Kreislauf.
  // ESP32 Spezifisch
  ledcSetup(0, 5000, 8);                    // Sage der Hardware, dass der LED Channel 0
                                            // mit einer Ferequenz von 5000Hz und einer 8 bit (0-255) auflösung funktionieren soll
  ledcAttachPin(LED_BUILTIN, 0);            // Sage der Hardware, das Pin 25 (LED) mit Channel 1 gesteuert werden soll.
  Serial.begin(115200);                     // Schneler und braucht deshalb weniger Zeit
}

void loop() {
  if (millis()%1000 == 0) {// Klapt nur, wenn alle Aktion an sich weniger als 1 ms dauert
    Serial.println(myRamp.update());
  }else if (millis()-(lastRun+50) >= 0) {// Klapt nur, wenn die aktion an sich wneiger als 1 ms dauert
    lastRun += 50;                        // Wenn das Intervall 50ms sein soll hier oben die Zeit vor der ausführung setzen
    int analogValue = analogRead(analogPin);
    Serial.println(analogValue);
    //lastRun += 50;                      // Wenn die Pause 50ms sein soll nach der ausführung setzen.
  }
  byte val = myRamp.update();                  // Hole die aktuelle Zahl
  //analogWrite(LED_BUILTIN, val);            // Arduino Style, nicht ESP32
  ledcWrite(0, val);                          // Setze den LEd Channel 0 auf die aktuelle Zahl
  if (digitalRead(BUTTON_PIN) == LOW && !isPressedMarker) {// Wenn wir an dem Pin 0 Lesen und das GND Level anliegt, dann machen wir etwas
    isPressedMarker = true;          // Durchlaufe das setzen nur einmal beim ersten drücken
    toggleswitch = !toggleswitch;     // Wechsle die Varriable
    Serial.println(toggleswitch);     // Schreibe (eigentliche Aufgabe)
  } else if (digitalRead(BUTTON_PIN) == HIGH) {
    isPressedMarker = false;        // Wenn der button nicht mehr gedrückt ist marker zurück setzen.
  }
}